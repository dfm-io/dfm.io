name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read # to fetch code
  actions: write # to cancel previous workflows

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  generate-matrix:
    name: "Generate build matrix"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: executed
          key: ${{ runner.os }}-posts-${{ github.head_ref || github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-posts-${{ github.head_ref || github.ref }}-
            ${{ runner.os }}-posts-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - id: set-matrix
        run: python scripts/generate_matrix.py >> $GITHUB_OUTPUT

  run:
    name: "Execute post: ${{ matrix.post }}"
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.post != 'placeholder' }}
      - uses: astral-sh/setup-uv@v6
        if: ${{ matrix.post != 'placeholder' }}
      - run: |
          cd posts/${{ matrix.post }}
          uv run jupyter nbconvert --to notebook --output=${{ matrix.post }}.ipynb --execute post.ipynb
        if: ${{ matrix.post != 'placeholder' }}
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.post != 'placeholder' && always() }}
        with:
          name: ${{ matrix.post }}
          path: posts/${{ matrix.post }}/${{ matrix.post }}.ipynb

  cache-posts:
    needs: run
    name: "Cache executed posts"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: executed
          key: ${{ runner.os }}-posts-${{ github.head_ref || github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-posts-${{ github.head_ref || github.ref }}-
            ${{ runner.os }}-posts-
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: executed
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: python scripts/generate_matrix.py checksums

  build-site:
    needs: run
    name: "Build and deploy site"
    runs-on: ubuntu-latest
    permissions:
      contents: write # to push to gh-pages
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: executed
      - uses: astral-sh/setup-uv@v6
      - run: uv run scripts/render_notebooks.py
      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "0.89.0"
          extended: true
      - run: hugo

      - name: Deploy to production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: dfm/dfm.github.com
          publish_branch: main
          publish_dir: ./public
          cname: dfm.io

      - name: Deploy to test
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
